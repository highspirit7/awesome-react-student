{"ast":null,"code":"//통신하는 부분을 따로 빼서 제작하기도 한다.\nimport axios from \"axios\"; //action type 설정(인터페이스를 맞춰주는)\n\nexport var REQUEST_CONTENTS = \"REQUEST_CONTENTS\";\nexport var RECEIVE_CONTENTS = \"RECEIVE_CONTENTS\";\nexport var CHANGE_FULL_CONTENT = \"CHANGE_FULL_CONTENT\"; //action creator(액션 생성자)\n\nvar requestContents = function requestContents() {\n  return {\n    type: REQUEST_CONTENTS\n  };\n};\n\nvar receiveContents = function receiveContents(contents) {\n  return {\n    type: RECEIVE_CONTENTS,\n    contents: contents,\n    receiveAt: Date.now()\n  };\n}; //화살표 함수에서 화살표 이후 부분을 소괄호로 감싸면 감싼 부분 전체를 자동적으로 리턴하게 된다.\n\n\nexport var changeFullContent = function changeFullContent(content) {\n  return {\n    type: CHANGE_FULL_CONTENT,\n    content: content\n  };\n};\nvar token = \"AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg\";\nvar maxResults = 29;\n\nvar API = function API(_ref) {\n  var _ref$token = _ref.token,\n      token = _ref$token === void 0 ? \"\" : _ref$token,\n      _ref$maxResults = _ref.maxResults,\n      maxResults = _ref$maxResults === void 0 ? 30 : _ref$maxResults;\n  var URL = \"https://www.googleapis.com/youtube/v3/\";\n  var api = URL + \"videos?part=snippet&chart=mostPopular&key=\".concat(token, \"&maxResults=\").concat(maxResults);\n  return axios.get(api);\n};\n\nvar setContents = function setContents(data) {\n  var list = [];\n  data.items.forEach(function (item, index) {\n    list.push({\n      id: item.id,\n      name: item.snippet.title\n    });\n  });\n  return list;\n}; //비동기 action(async action)\n\n\nexport var fetchContents = function fetchContents() {\n  return function (dispatch) {\n    dispatch(requestContents());\n    return API({\n      token: token,\n      maxResults: maxResults\n    }).then(function (_ref2) {\n      var data = _ref2.data;\n      return setContents(data);\n    }).then(function (contents) {\n      dispatch(changeFullContent(contents[0]));\n      dispatch(receiveContents(contents.slice(1, contents.length)));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/easier/Coding/React_Study/awesome-react-student/4week/class/src/actions.js"],"names":["axios","REQUEST_CONTENTS","RECEIVE_CONTENTS","CHANGE_FULL_CONTENT","requestContents","type","receiveContents","contents","receiveAt","Date","now","changeFullContent","content","token","maxResults","API","URL","api","get","setContents","data","list","items","forEach","item","index","push","id","name","snippet","title","fetchContents","dispatch","then","slice","length"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B,C,CAEP;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAP;AAAA,CAAxB;;AACA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ;AAAA,SAAK;AACnCF,IAAAA,IAAI,EAAEH,gBAD6B;AAEnCK,IAAAA,QAAQ,EAAEA,QAFyB;AAGnCC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAHwB,GAAL;AAAA,CAAhC,C,CAMA;;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,OAAO;AAAA,SAAK;AAC3CP,IAAAA,IAAI,EAAEF,mBADqC;AAE3CS,IAAAA,OAAO,EAAEA;AAFkC,GAAL;AAAA,CAAjC;AAKP,IAAMC,KAAK,GAAG,yCAAd;AACA,IAAMC,UAAU,GAAG,EAAnB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAqC;AAAA,wBAAlCF,KAAkC;AAAA,MAAlCA,KAAkC,2BAA1B,EAA0B;AAAA,6BAAtBC,UAAsB;AAAA,MAAtBA,UAAsB,gCAAT,EAAS;AAC/C,MAAME,GAAG,GAAG,wCAAZ;AAEA,MAAIC,GAAG,GACLD,GAAG,uDAC0CH,KAD1C,yBAC8DC,UAD9D,CADL;AAIA,SAAOd,KAAK,CAACkB,GAAN,CAAUD,GAAV,CAAP;AACD,CARD;;AAUA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAC1B,MAAIC,IAAI,GAAG,EAAX;AAEAD,EAAAA,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClCJ,IAAAA,IAAI,CAACK,IAAL,CAAU;AAAEC,MAAAA,EAAE,EAAEH,IAAI,CAACG,EAAX;AAAeC,MAAAA,IAAI,EAAEJ,IAAI,CAACK,OAAL,CAAaC;AAAlC,KAAV;AACD,GAFD;AAGA,SAAOT,IAAP;AACD,CAPD,C,CASA;;;AACA,OAAO,IAAMU,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC5B,eAAe,EAAhB,CAAR;AAEA,WAAOW,GAAG,CAAC;AAACF,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,UAAU,EAAVA;AAAR,KAAD,CAAH,CACEmB,IADF,CACO;AAAA,UAAGb,IAAH,SAAGA,IAAH;AAAA,aAAcD,WAAW,CAACC,IAAD,CAAzB;AAAA,KADP,EAEEa,IAFF,CAEO,UAAA1B,QAAQ,EAAI;AAChByB,MAAAA,QAAQ,CAACrB,iBAAiB,CAACJ,QAAQ,CAAC,CAAD,CAAT,CAAlB,CAAR;AACAyB,MAAAA,QAAQ,CAAC1B,eAAe,CAACC,QAAQ,CAAC2B,KAAT,CAAe,CAAf,EAAkB3B,QAAQ,CAAC4B,MAA3B,CAAD,CAAhB,CAAR;AACD,KALF,CAAP;AAMD,GATD;AAUD,CAXM","sourcesContent":["//통신하는 부분을 따로 빼서 제작하기도 한다.\nimport axios from \"axios\";\n\n//action type 설정(인터페이스를 맞춰주는)\nexport const REQUEST_CONTENTS = \"REQUEST_CONTENTS\";\nexport const RECEIVE_CONTENTS = \"RECEIVE_CONTENTS\";\nexport const CHANGE_FULL_CONTENT = \"CHANGE_FULL_CONTENT\";\n\n//action creator(액션 생성자)\nconst requestContents = () => ({ type: REQUEST_CONTENTS });\nconst receiveContents = contents => ({\n  type: RECEIVE_CONTENTS,\n  contents: contents,\n  receiveAt: Date.now()\n});\n\n//화살표 함수에서 화살표 이후 부분을 소괄호로 감싸면 감싼 부분 전체를 자동적으로 리턴하게 된다.\nexport const changeFullContent = content => ({\n  type: CHANGE_FULL_CONTENT,\n  content: content\n});\n\nconst token = \"AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg\";\nconst maxResults = 29;\n\nconst API = ({ token = \"\", maxResults = 30 }) => {\n  const URL = \"https://www.googleapis.com/youtube/v3/\";\n\n  let api =\n    URL +\n    `videos?part=snippet&chart=mostPopular&key=${token}&maxResults=${maxResults}`;\n\n  return axios.get(api);\n};\n\nconst setContents = data => {\n  let list = [];\n\n  data.items.forEach((item, index) => {\n    list.push({ id: item.id, name: item.snippet.title });\n  });\n  return list;\n};\n\n//비동기 action(async action)\nexport const fetchContents = () => {\n  return dispatch => {\n    dispatch(requestContents());\n    \n    return API({token, maxResults})\n            .then(({ data }) => setContents(data))\n            .then(contents => {\n              dispatch(changeFullContent(contents[0]));\n              dispatch(receiveContents(contents.slice(1, contents.length)));\n            })\n  };\n};\n"]},"metadata":{},"sourceType":"module"}