{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { REQUEST_CONTENTS, CHANGE_FULL_CONTENT, RECEIVE_CONTENTS, CHANGE_SEARCH_INPUT } from \"./actions\"; // import { bindActionCreators } from \"redux\";\n\nfunction selectedContent() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    viewContent: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_FULL_CONTENT:\n      return Object.assign({}, state);\n\n    default:\n      return state;\n  }\n}\n\nfunction selectedKeyword() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    keyword: \"\"\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_SEARCH_INPUT:\n      return Object.assign({}, state, {\n        keyword: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction contentsByYoutube() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isFetching: false,\n    items: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_CONTENTS:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case RECEIVE_CONTENTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        items: action.contents,\n        lastUpdated: action.receivedAt\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  contentsByYoutube: contentsByYoutube,\n  selectedContent: selectedContent,\n  selectedKeyword: selectedKeyword\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/easier/Coding/React_Study/awesome-react-student/4week/class/src/reducers.js"],"names":["combineReducers","REQUEST_CONTENTS","CHANGE_FULL_CONTENT","RECEIVE_CONTENTS","CHANGE_SEARCH_INPUT","selectedContent","state","viewContent","action","type","Object","assign","selectedKeyword","keyword","payload","contentsByYoutube","isFetching","items","contents","lastUpdated","receivedAt","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,mBAJF,QAKO,WALP,C,CAMA;;AAEA,SAASC,eAAT,GAKE;AAAA,MAJAC,KAIA,uEAJQ;AACNC,IAAAA,WAAW,EAAE;AADP,GAIR;AAAA,MADAC,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,mBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAP;;AACF;AACE,aAAOA,KAAP;AAJJ;AAMD;;AAED,SAASM,eAAT,GAKE;AAAA,MAJAN,KAIA,uEAJQ;AACNO,IAAAA,OAAO,EAAE;AADH,GAIR;AAAA,MADAL,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,mBAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BO,QAAAA,OAAO,EAAEL,MAAM,CAACM;AADc,OAAzB,CAAP;;AAGF;AACE,aAAOR,KAAP;AANJ;AAQD;;AAED,SAASS,iBAAT,GAME;AAAA,MALAT,KAKA,uEALQ;AACNU,IAAAA,UAAU,EAAE,KADN;AAENC,IAAAA,KAAK,EAAE;AAFD,GAKR;AAAA,MADAT,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,gBAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BU,QAAAA,UAAU,EAAE;AADkB,OAAzB,CAAP;;AAGF,SAAKb,gBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BU,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,KAAK,EAAET,MAAM,CAACU,QAFgB;AAG9BC,QAAAA,WAAW,EAAEX,MAAM,CAACY;AAHU,OAAzB,CAAP;;AAKF;AACE,aAAOd,KAAP;AAZJ;AAcD;;AAED,IAAMe,WAAW,GAAGrB,eAAe,CAAC;AAClCe,EAAAA,iBAAiB,EAAjBA,iBADkC;AAElCV,EAAAA,eAAe,EAAfA,eAFkC;AAGlCO,EAAAA,eAAe,EAAfA;AAHkC,CAAD,CAAnC;AAMA,eAAeS,WAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport {\n  REQUEST_CONTENTS,\n  CHANGE_FULL_CONTENT,\n  RECEIVE_CONTENTS,\n  CHANGE_SEARCH_INPUT\n} from \"./actions\";\n// import { bindActionCreators } from \"redux\";\n\nfunction selectedContent(\n  state = {\n    viewContent: {}\n  },\n  action\n) {\n  switch (action.type) {\n    case CHANGE_FULL_CONTENT:\n      return Object.assign({}, state, );\n    default:\n      return state;\n  } \n}\n\nfunction selectedKeyword(\n  state = {\n    keyword: \"\"\n  },\n  action\n) {\n  switch (action.type) {\n    case CHANGE_SEARCH_INPUT:\n      return Object.assign({}, state, {\n        keyword: action.payload\n      });\n    default:\n      return state;\n  }\n}\n\nfunction contentsByYoutube(\n  state = {\n    isFetching: false,\n    items: []\n  },\n  action\n) {\n  switch (action.type) {\n    case REQUEST_CONTENTS:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n    case RECEIVE_CONTENTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        items: action.contents,\n        lastUpdated: action.receivedAt\n      });\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  contentsByYoutube,\n  selectedContent,\n  selectedKeyword\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}