{"ast":null,"code":"//통신하는 부분을 따로 빼서 제작하기도 한다.\nimport axios from \"axios\"; //action type 설정(인터페이스를 맞춰주는)\n\nexport var REQUEST_CONTENTS = \"REQUEST_CONTENTS\";\nexport var RECEIVE_CONTENTS = \"RECEIVE_CONTENTS\";\nexport var CHANGE_FULL_CONTENT = \"CHANGE_FULL_CONTENT\";\nexport var CHANGE_SEARCH_INPUT = \"CHANGE_SEARCH_INPUT\"; //action creator(액션 생성자)\n\nvar requestContents = function requestContents() {\n  return {\n    type: REQUEST_CONTENTS\n  };\n};\n\nvar receiveContents = function receiveContents(contents) {\n  return {\n    type: RECEIVE_CONTENTS,\n    contents: contents,\n    receiveAt: Date.now()\n  };\n}; //화살표 함수에서 화살표 이후 부분을 소괄호로 감싸면 감싼 부분 전체를 자동적으로 리턴하게 된다.\n\n\nexport var changeFullContent = function changeFullContent(content) {\n  return {\n    type: CHANGE_FULL_CONTENT,\n    content: content\n  };\n};\nexport var changeSearchInput = function changeSearchInput(event) {\n  return {\n    type: CHANGE_SEARCH_INPUT,\n    payload: event.target.value\n  };\n};\nvar token = \"AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg\";\nvar maxResults = 29;\n\nvar API = function API(_ref) {\n  var _ref$token = _ref.token,\n      token = _ref$token === void 0 ? \"\" : _ref$token,\n      _ref$maxResults = _ref.maxResults,\n      maxResults = _ref$maxResults === void 0 ? 30 : _ref$maxResults,\n      _ref$keyword = _ref.keyword,\n      keyword = _ref$keyword === void 0 ? \"\" : _ref$keyword;\n  var URL = \"https://www.googleapis.com/youtube/v3/\";\n  var api;\n  console.log(keyword);\n\n  if (keyword !== \"\") {\n    api = URL + \"search?q=\".concat(keyword, \"&part=snippet&chart=mostPopular&key=\").concat(token, \"&maxResults=\").concat(maxResults);\n  } else {\n    api = URL + \"videos?part=snippet&chart=mostPopular&key=\".concat(token, \"&maxResults=\").concat(maxResults);\n  }\n\n  return axios.get(api);\n};\n\nvar setContents = function setContents(data, type) {\n  var list = [];\n\n  switch (type) {\n    case \"main\":\n      data.items.forEach(function (item, index) {\n        list.push({\n          id: item.id,\n          name: item.snippet.title\n        });\n      });\n      return list;\n\n    case \"search\":\n      data.items.forEach(function (item, index) {\n        list.push({\n          id: item.id.videoId,\n          name: item.snippet.title\n        });\n      });\n      return list;\n\n    default:\n      return list;\n  }\n}; //비동기 action(async action)\n\n\nexport var fetchContents = function fetchContents() {\n  return function (dispatch) {\n    dispatch(requestContents());\n    return API({\n      token: token,\n      maxResults: maxResults\n    }).then(function (_ref2) {\n      var data = _ref2.data;\n      return setContents(data, \"main\");\n    }).then(function (contents) {\n      dispatch(changeFullContent(contents[0]));\n      dispatch(receiveContents(contents.slice(1, contents.length)));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var fetchSearchContents = function fetchSearchContents(keyword) {\n  return function (dispatch) {\n    dispatch(requestContents());\n    return API({\n      token: token,\n      maxResults: maxResults,\n      keyword: keyword\n    }).then(function (_ref3) {\n      var data = _ref3.data;\n      return setContents(data, \"search\");\n    }).then(function (contents) {\n      dispatch(changeFullContent(contents[0]));\n      dispatch(receiveContents(contents.slice(1, contents.length)));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/easier/Coding/React_Study/awesome-react-student/4week/class/src/actions.js"],"names":["axios","REQUEST_CONTENTS","RECEIVE_CONTENTS","CHANGE_FULL_CONTENT","CHANGE_SEARCH_INPUT","requestContents","type","receiveContents","contents","receiveAt","Date","now","changeFullContent","content","changeSearchInput","event","payload","target","value","token","maxResults","API","keyword","URL","api","console","log","get","setContents","data","list","items","forEach","item","index","push","id","name","snippet","title","videoId","fetchContents","dispatch","then","slice","length","catch","err","fetchSearchContents"],"mappings":"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","sourcesContent":["//통신하는 부분을 따로 빼서 제작하기도 한다.\nimport axios from \"axios\";\n\n//action type 설정(인터페이스를 맞춰주는)\nexport const REQUEST_CONTENTS = \"REQUEST_CONTENTS\";\nexport const RECEIVE_CONTENTS = \"RECEIVE_CONTENTS\";\nexport const CHANGE_FULL_CONTENT = \"CHANGE_FULL_CONTENT\";\nexport const CHANGE_SEARCH_INPUT = \"CHANGE_SEARCH_INPUT\";\n\n//action creator(액션 생성자)\nconst requestContents = () => ({ type: REQUEST_CONTENTS });\nconst receiveContents = contents => ({\n  type: RECEIVE_CONTENTS,\n  contents: contents,\n  receiveAt: Date.now()\n});\n\n//화살표 함수에서 화살표 이후 부분을 소괄호로 감싸면 감싼 부분 전체를 자동적으로 리턴하게 된다.\nexport const changeFullContent = content => ({\n  type: CHANGE_FULL_CONTENT,\n  content: content\n});\n\nexport const changeSearchInput = event => ({\n  type: CHANGE_SEARCH_INPUT,\n  payload: event.target.value\n});\n\nconst token = \"AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg\";\nconst maxResults = 29;\n\nconst API = ({ token = \"\", maxResults = 30, keyword = \"\" }) => {\n  const URL = \"https://www.googleapis.com/youtube/v3/\";\n  let api;\n  console.log(keyword)\n  if (keyword !== \"\") {\n    api =\n      URL +\n      `search?q=${keyword}&part=snippet&chart=mostPopular&key=${token}&maxResults=${maxResults}`;\n  } else {\n    api =\n      URL +\n      `videos?part=snippet&chart=mostPopular&key=${token}&maxResults=${maxResults}`;\n  }\n\n  return axios.get(api);\n};\n\nconst setContents = (data, type) => {\n  let list = [];\n\n  switch (type) {\n    case \"main\":\n      data.items.forEach((item, index) => {\n        list.push({ id: item.id, name: item.snippet.title });\n      });\n      return list;\n    case \"search\":\n      data.items.forEach((item, index) => {\n        list.push({ id: item.id.videoId, name: item.snippet.title });\n      });\n      return list;\n    default:\n      return list;\n  }\n};\n\n//비동기 action(async action)\nexport const fetchContents = () => {\n  return dispatch => {\n    dispatch(requestContents());\n\n    return API({ token, maxResults })\n      .then(({ data }) => setContents(data, \"main\"))\n      .then(contents => {\n        dispatch(changeFullContent(contents[0]));\n        dispatch(receiveContents(contents.slice(1, contents.length)));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n};\n\nexport const fetchSearchContents = keyword => {\n  return dispatch => {\n    dispatch(requestContents());\n\n    return API({ token, maxResults, keyword })\n      .then(({ data }) => setContents(data, \"search\"))\n      .then(contents => {\n        dispatch(changeFullContent(contents[0]));\n        dispatch(receiveContents(contents.slice(1, contents.length)));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}