{"ast":null,"code":"import _classCallCheck from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/src/container/MainView.js\";\nimport React, { Component } from \"react\";\nimport \"./MainView.css\";\nimport ContentList from \"../component/contentList/ContentList.js\";\nimport FullContent from \"../component/fullcontent/FullContent.js\";\nimport { connect } from \"react-redux\";\nimport { fetchContents as _fetchContents, changeFullContent as _changeFullContent } from \"../actions\";\n\nvar MainView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainView, _Component);\n\n  function MainView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFullContentChange = function (content) {\n      _this.props.changeFullContent(content);\n    };\n\n    return _this;\n  }\n\n  _createClass(MainView, [{\n    key: \"componentDidMount\",\n    //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n    value: function componentDidMount() {\n      this.props.fetchContents();\n    } //메인화면에서 영상을 실행하는 플레이어를 제어하는 함수\n    //이 함수를 이용해서 영상을 변경 한다.\n    //리덕스 쓰니까 이 함수 없애도 된다.\n    //해당 함수는 손자 컴포넌트인 content 컴포넌트에서 결국 사용되는데, content 컴포넌트가 리덕스 store와 1대1 통신하도록 바꾸어줄 수 있는가?\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"mainView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(FullContent, {\n        content: this.props.currentViewContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(ContentList, {\n        contents: this.props.contents,\n        onClick: this.handleFullContentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MainView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //reducer단위로 받는 state 구분\n  var contentsByYoutube = state.contentsByYoutube,\n      selectedContent = state.selectedContent; //items에 들어있는 데이터를 이름만바꿔서 contents에 담는다.\n\n  var _ref = contentsByYoutube || {},\n      isFetching = _ref.isFetching,\n      lastUpdated = _ref.lastUpdated,\n      contents = _ref.items;\n\n  var _ref2 = selectedContent || {},\n      currentViewContent = _ref2.viewContent;\n\n  console.log(state);\n  return {\n    isFetching: isFetching,\n    lastUpdated: lastUpdated,\n    currentViewContent: currentViewContent,\n    contents: contents\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchContents: function fetchContents() {\n      return dispatch(_fetchContents());\n    },\n    changeFullContent: function changeFullContent(content) {\n      return dispatch(_changeFullContent(content));\n    }\n  };\n}; //state를 전달하는 함수 먼저, 그다음 dispatch 관련 함수 이렇게 순서를 지켜서 connect해주어야한다.\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainView);","map":{"version":3,"sources":["/Users/easier/Coding/React_Study/awesome-react-student/4week/class/src/container/MainView.js"],"names":["React","Component","ContentList","FullContent","connect","fetchContents","changeFullContent","MainView","handleFullContentChange","content","props","currentViewContent","contents","mapStateToProps","state","contentsByYoutube","selectedContent","isFetching","lastUpdated","items","viewContent","console","log","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAbA,cAAT,EAAwBC,iBAAiB,IAAjBA,kBAAxB,QAAiD,YAAjD;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAWJC,uB,GAA0B,UAAAC,OAAO,EAAI;AACnC,YAAKC,KAAL,CAAWJ,iBAAX,CAA6BG,OAA7B;AACD,K;;;;;;;AAZD;wCACoB;AAClB,WAAKC,KAAL,CAAWL,aAAX;AACD,K,CAED;AACA;AACA;AAEA;;;;6BAKS;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKK,KAAL,CAAWC,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAQE,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QADvB;AAEE,QAAA,OAAO,EAAE,KAAKJ,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAeD;;;;EAhCoBP,S;;AAkCvB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B;AAD+B,MAEvBC,iBAFuB,GAEgBD,KAFhB,CAEvBC,iBAFuB;AAAA,MAEJC,eAFI,GAEgBF,KAFhB,CAEJE,eAFI,EAI/B;;AAJ+B,aAKsBD,iBAAiB,IAAI,EAL3C;AAAA,MAKvBE,UALuB,QAKvBA,UALuB;AAAA,MAKXC,WALW,QAKXA,WALW;AAAA,MAKSN,QALT,QAKEO,KALF;;AAAA,cAOaH,eAAe,IAAI,EAPhC;AAAA,MAOVL,kBAPU,SAOvBS,WAPuB;;AAQ/BC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,SAAO;AACLG,IAAAA,UAAU,EAAVA,UADK;AAELC,IAAAA,WAAW,EAAXA,WAFK;AAGLP,IAAAA,kBAAkB,EAAlBA,kBAHK;AAILC,IAAAA,QAAQ,EAARA;AAJK,GAAP;AAMD,CAfD;;AAkBA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCnB,IAAAA,aAAa,EAAE;AAAA,aAAMmB,QAAQ,CAACnB,cAAa,EAAd,CAAd;AAAA,KADuB;AAEtCC,IAAAA,iBAAiB,EAAE,2BAAAG,OAAO;AAAA,aAAIe,QAAQ,CAAClB,kBAAiB,CAACG,OAAD,CAAlB,CAAZ;AAAA;AAFY,GAAL;AAAA,CAAnC,C,CAKA;;;AACA,eAAeL,OAAO,CACpBS,eADoB,EAEpBU,kBAFoB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./MainView.css\";\nimport ContentList from \"../component/contentList/ContentList.js\";\nimport FullContent from \"../component/fullcontent/FullContent.js\";\nimport { connect } from \"react-redux\";\nimport { fetchContents, changeFullContent } from \"../actions\";\n\nclass MainView extends Component {\n  //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  //메인화면에서 영상을 실행하는 플레이어를 제어하는 함수\n  //이 함수를 이용해서 영상을 변경 한다.\n  //리덕스 쓰니까 이 함수 없애도 된다.\n  \n  //해당 함수는 손자 컴포넌트인 content 컴포넌트에서 결국 사용되는데, content 컴포넌트가 리덕스 store와 1대1 통신하도록 바꾸어줄 수 있는가?\n  handleFullContentChange = content => {\n    this.props.changeFullContent(content);\n  };\n\n  render() {\n\n    return (\n      <div className=\"mainView\">\n        {/*\n\t\t\t영상을 실행 시키는 컴포넌트 \n      \t*/}\n        <FullContent content={this.props.currentViewContent} />\n        {/*\n\t\t\t실행할 영상 리스트를 출력하는 컴포넌트\n      \t*/}\n        <ContentList\n          contents={this.props.contents}\n          onClick={this.handleFullContentChange}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  //reducer단위로 받는 state 구분\n  const { contentsByYoutube, selectedContent } = state;\n\n  //items에 들어있는 데이터를 이름만바꿔서 contents에 담는다.\n  const { isFetching, lastUpdated, items: contents } = contentsByYoutube || {};\n\n  const { viewContent: currentViewContent } = selectedContent || {};\n  console.log(state);\n  return {\n    isFetching,\n    lastUpdated,\n    currentViewContent,\n    contents\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContents: () => dispatch(fetchContents()),\n  changeFullContent: content => dispatch(changeFullContent(content))\n});\n\n//state를 전달하는 함수 먼저, 그다음 dispatch 관련 함수 이렇게 순서를 지켜서 connect해주어야한다.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainView);\n"]},"metadata":{},"sourceType":"module"}