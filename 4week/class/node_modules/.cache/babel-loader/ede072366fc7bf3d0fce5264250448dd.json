{"ast":null,"code":"import _classCallCheck from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/easier/Coding/React_Study/awesome-react-student/4week/class/src/container/Search.js\";\nimport React, { Component } from \"react\";\nimport ContentList from \"../component/contentList/ContentList.js\"; // import axios from \"axios\";\n\nimport { connect } from \"react-redux\";\nimport { changeSearchInput as _changeSearchInput, fetchSearchContents as _fetchSearchContents } from \"../actions\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      _this.props.fetchSearchContents(_this.props.keyword);\n\n      e.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    // fetchSearch = (keyword) => {\n    //   let maxResults = 30\n    //   let token = 'AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY'//본인의 토큰을 발급 받아서 입력\n    //   axios.get('https://www.googleapis.com/youtube/v3/search?q='+keyword+'&part=snippet&key='+token+'&maxResults='+maxResults)\n    //   .then(({data}) => {\n    //     const list = this.setContents(data)\n    //     this.setState({contents:list})\n    //   })\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row align-items-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.props.keyword,\n        onChange: this.props.changeSearchInput,\n        type: \"text\",\n        className: \"form-control keyword\",\n        placeholder: \"Search...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))), React.createElement(ContentList, {\n        contents: this.props.contents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //reducer단위로 받는 state 구분\n  //mapStateToProps의 인자로 스토어의 state 자체가 들어가는 거 같은데, 아래의 객체 구조분해할당이 어떻게 가능한지 궁금하다.\n  var contentsByYoutube = state.contentsByYoutube,\n      selectedKeyword = state.selectedKeyword; //items에 들어있는 데이터를 이름만바꿔서 contents에 담는다.\n\n  var _ref = contentsByYoutube || {},\n      lastUpdated = _ref.lastUpdated,\n      contents = _ref.items;\n\n  var _ref2 = selectedKeyword || {},\n      keyword = _ref2.keyword;\n\n  return {\n    lastUpdated: lastUpdated,\n    contents: contents,\n    keyword: keyword\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchSearchContents: function fetchSearchContents() {\n      return dispatch(_fetchSearchContents());\n    },\n    changeSearchInput: function changeSearchInput(event) {\n      return dispatch(_changeSearchInput(event));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/easier/Coding/React_Study/awesome-react-student/4week/class/src/container/Search.js"],"names":["React","Component","ContentList","connect","changeSearchInput","fetchSearchContents","Search","handleSubmit","e","props","keyword","preventDefault","contents","mapStateToProps","state","contentsByYoutube","selectedKeyword","lastUpdated","items","mapDispatchToProps","dispatch","event"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yCAAxB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAiB,IAAjBA,kBAAT,EAA4BC,mBAAmB,IAAnBA,oBAA5B,QAAuD,YAAvD;;IAEMC,M;;;;;;;;;;;;;;;;;;UAyBHC,Y,GAAe,UAACC,CAAD,EAAO;AAErB,YAAKC,KAAL,CAAWJ,mBAAX,CAA+B,MAAKI,KAAL,CAAWC,OAA1C;;AACAF,MAAAA,CAAC,CAACG,cAAF;AACD,K;;;;;;;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACL,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAmB,QAAA,QAAQ,EAAE,KAAKJ,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAO,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,OAAzB;AAAkC,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWL,iBAAvD;AAA0E,QAAA,IAAI,EAAC,MAA/E;AAAsF,QAAA,SAAS,EAAC,sBAAhG;AAAuH,QAAA,WAAW,EAAC,WAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF,EAUE,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWG,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAcD;;;;EAxDcX,S;;AA4DpB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC;AACA;AAFgC,MAGxBC,iBAHwB,GAGeD,KAHf,CAGxBC,iBAHwB;AAAA,MAGLC,eAHK,GAGeF,KAHf,CAGLE,eAHK,EAKhC;;AALgC,aAMSD,iBAAiB,IAAI,EAN9B;AAAA,MAMxBE,WANwB,QAMxBA,WANwB;AAAA,MAMJL,QANI,QAMXM,KANW;;AAAA,cAQZF,eAAe,IAAI,EARP;AAAA,MAQxBN,OARwB,SAQxBA,OARwB;;AAUhC,SAAO;AAELO,IAAAA,WAAW,EAAXA,WAFK;AAGLL,IAAAA,QAAQ,EAARA,QAHK;AAILF,IAAAA,OAAO,EAAPA;AAJK,GAAP;AAMD,CAhBA;;AAmBD,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCf,IAAAA,mBAAmB,EAAE;AAAA,aAAMe,QAAQ,CAACf,oBAAmB,EAApB,CAAd;AAAA,KADiB;AAEtCD,IAAAA,iBAAiB,EAAE,2BAAAiB,KAAK;AAAA,aAAID,QAAQ,CAAChB,kBAAiB,CAACiB,KAAD,CAAlB,CAAZ;AAAA;AAFc,GAAL;AAAA,CAAnC;;AAKC,eAAelB,OAAO,CACpBU,eADoB,EAEpBM,kBAFoB,CAAP,CAGbb,MAHa,CAAf","sourcesContent":["import React, { Component} from \"react\"\nimport ContentList from \"../component/contentList/ContentList.js\";\n// import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { changeSearchInput, fetchSearchContents } from \"../actions\";\n\nclass Search extends Component {\n    // constructor(props) {\n    //     super(props);\n\n    //     this.state = {\n    //       contents : [],\n    //       keyword: \"\"\n    //     };\n    // }\n\n    // handleInputChange = (e) => {\n    //   this.setState({keyword:e.target.value})\n    // }\n\n    //MainView의 setContents 함수와  id가 다르다. item.id.videoId\n  //   setContents = (data) => {\n  //    let list = []\n  //     data.items.forEach((item, index) => {\n  //       if(item.id.videoId) {\n  //         list.push({id:item.id.videoId,name:item.snippet.title})\n  //       }\n  //     })\n  //     return list\n  // }\n\n   handleSubmit = (e) => {\n   \n    this.props.fetchSearchContents(this.props.keyword);\n    e.preventDefault();\n  }\n\n    // fetchSearch = (keyword) => {\n    //   let maxResults = 30\n    //   let token = 'AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY'//본인의 토큰을 발급 받아서 입력\n    //   axios.get('https://www.googleapis.com/youtube/v3/search?q='+keyword+'&part=snippet&key='+token+'&maxResults='+maxResults)\n    //   .then(({data}) => {\n    //     const list = this.setContents(data)\n    //     this.setState({contents:list})\n    //   })\n    // }\n\n    render() {\n        return (\n          <div className=\"Search\">\n            <form className=\"\" onSubmit={this.handleSubmit}>\n              <div className=\"form-group row align-items-center justify-content-center\">\n                <div className=\"col-md-3\">\n                  {/* <label>검색</label> */}\n                  <input value={this.props.keyword} onChange={this.props.changeSearchInput} type=\"text\" className=\"form-control keyword\" placeholder=\"Search...\"/>\n                </div>\n              </div>\n            </form>\n\n            <ContentList contents={this.props.contents} />\n          </div>\n        );\n      }\n }\n\n \n const mapStateToProps = state => {\n  //reducer단위로 받는 state 구분\n  //mapStateToProps의 인자로 스토어의 state 자체가 들어가는 거 같은데, 아래의 객체 구조분해할당이 어떻게 가능한지 궁금하다.\n  const { contentsByYoutube, selectedKeyword } = state;\n\n  //items에 들어있는 데이터를 이름만바꿔서 contents에 담는다.\n  const { lastUpdated, items: contents } = contentsByYoutube || {};\n\n  const { keyword } = selectedKeyword || {};\n\n  return {\n   \n    lastUpdated,\n    contents,\n    keyword\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSearchContents: () => dispatch(fetchSearchContents()),\n  changeSearchInput: event => dispatch(changeSearchInput(event))\n});\n\n export default connect(\n   mapStateToProps,\n   mapDispatchToProps\n )(Search);"]},"metadata":{},"sourceType":"module"}